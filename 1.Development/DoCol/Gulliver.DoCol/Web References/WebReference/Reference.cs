//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace Gulliver.DoCol.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FMWebServiceBinding", Namespace="http://www.canon.com/ns/active/iwfm/SoapWebService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FMWSMessage))]
    public partial class FMWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback overlayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFormListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFormInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFormContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback putFormContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFormContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImageContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback putImageContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteImageContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDevmodeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDevmodeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDevmodeContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback putDevmodeContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDevmodeContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGraphdataListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGraphdataInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGraphdataContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback putGraphdataContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteGraphdataContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFielddataListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFielddataInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback assortOverlayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAssortConfigurationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAssortConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback archiveCsmxOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOperationCompleted;
        
        private System.Threading.SendOrPostCallback putOperationCompleted;
        
        private System.Threading.SendOrPostCallback postOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FMWebService() {
            this.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12;
            this.Url = global::Gulliver.DoCol.Properties.Settings.Default.Gulliver_DoCol_WebReference_FMWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event overlayCompletedEventHandler overlayCompleted;
        
        /// <remarks/>
        public event getFormListCompletedEventHandler getFormListCompleted;
        
        /// <remarks/>
        public event getFormInfoCompletedEventHandler getFormInfoCompleted;
        
        /// <remarks/>
        public event getFormContentCompletedEventHandler getFormContentCompleted;
        
        /// <remarks/>
        public event putFormContentCompletedEventHandler putFormContentCompleted;
        
        /// <remarks/>
        public event deleteFormContentCompletedEventHandler deleteFormContentCompleted;
        
        /// <remarks/>
        public event getImageListCompletedEventHandler getImageListCompleted;
        
        /// <remarks/>
        public event getImageInfoCompletedEventHandler getImageInfoCompleted;
        
        /// <remarks/>
        public event getImageContentCompletedEventHandler getImageContentCompleted;
        
        /// <remarks/>
        public event putImageContentCompletedEventHandler putImageContentCompleted;
        
        /// <remarks/>
        public event deleteImageContentCompletedEventHandler deleteImageContentCompleted;
        
        /// <remarks/>
        public event getDevmodeListCompletedEventHandler getDevmodeListCompleted;
        
        /// <remarks/>
        public event getDevmodeInfoCompletedEventHandler getDevmodeInfoCompleted;
        
        /// <remarks/>
        public event getDevmodeContentCompletedEventHandler getDevmodeContentCompleted;
        
        /// <remarks/>
        public event putDevmodeContentCompletedEventHandler putDevmodeContentCompleted;
        
        /// <remarks/>
        public event deleteDevmodeContentCompletedEventHandler deleteDevmodeContentCompleted;
        
        /// <remarks/>
        public event getGraphdataListCompletedEventHandler getGraphdataListCompleted;
        
        /// <remarks/>
        public event getGraphdataInfoCompletedEventHandler getGraphdataInfoCompleted;
        
        /// <remarks/>
        public event getGraphdataContentCompletedEventHandler getGraphdataContentCompleted;
        
        /// <remarks/>
        public event putGraphdataContentCompletedEventHandler putGraphdataContentCompleted;
        
        /// <remarks/>
        public event deleteGraphdataContentCompletedEventHandler deleteGraphdataContentCompleted;
        
        /// <remarks/>
        public event getFielddataListCompletedEventHandler getFielddataListCompleted;
        
        /// <remarks/>
        public event getFielddataInfoCompletedEventHandler getFielddataInfoCompleted;
        
        /// <remarks/>
        public event assortOverlayCompletedEventHandler assortOverlayCompleted;
        
        /// <remarks/>
        public event getAssortConfigurationListCompletedEventHandler getAssortConfigurationListCompleted;
        
        /// <remarks/>
        public event getAssortConfigurationCompletedEventHandler getAssortConfigurationCompleted;
        
        /// <remarks/>
        public event archiveCsmxCompletedEventHandler archiveCsmxCompleted;
        
        /// <remarks/>
        public event getCompletedEventHandler getCompleted;
        
        /// <remarks/>
        public event putCompletedEventHandler putCompleted;
        
        /// <remarks/>
        public event postCompletedEventHandler postCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:overlay", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse overlay([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("overlay", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void overlayAsync(FMWSRequest request) {
            this.overlayAsync(request, null);
        }
        
        /// <remarks/>
        public void overlayAsync(FMWSRequest request, object userState) {
            if ((this.overlayOperationCompleted == null)) {
                this.overlayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoverlayOperationCompleted);
            }
            this.InvokeAsync("overlay", new object[] {
                        request}, this.overlayOperationCompleted, userState);
        }
        
        private void OnoverlayOperationCompleted(object arg) {
            if ((this.overlayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.overlayCompleted(this, new overlayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFormList", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getFormList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getFormList", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getFormListAsync(FMWSRequest request) {
            this.getFormListAsync(request, null);
        }
        
        /// <remarks/>
        public void getFormListAsync(FMWSRequest request, object userState) {
            if ((this.getFormListOperationCompleted == null)) {
                this.getFormListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormListOperationCompleted);
            }
            this.InvokeAsync("getFormList", new object[] {
                        request}, this.getFormListOperationCompleted, userState);
        }
        
        private void OngetFormListOperationCompleted(object arg) {
            if ((this.getFormListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFormListCompleted(this, new getFormListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFormInfo", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getFormInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getFormInfo", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getFormInfoAsync(FMWSRequest request) {
            this.getFormInfoAsync(request, null);
        }
        
        /// <remarks/>
        public void getFormInfoAsync(FMWSRequest request, object userState) {
            if ((this.getFormInfoOperationCompleted == null)) {
                this.getFormInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormInfoOperationCompleted);
            }
            this.InvokeAsync("getFormInfo", new object[] {
                        request}, this.getFormInfoOperationCompleted, userState);
        }
        
        private void OngetFormInfoOperationCompleted(object arg) {
            if ((this.getFormInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFormInfoCompleted(this, new getFormInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFormContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getFormContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getFormContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getFormContentAsync(FMWSRequest request) {
            this.getFormContentAsync(request, null);
        }
        
        /// <remarks/>
        public void getFormContentAsync(FMWSRequest request, object userState) {
            if ((this.getFormContentOperationCompleted == null)) {
                this.getFormContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormContentOperationCompleted);
            }
            this.InvokeAsync("getFormContent", new object[] {
                        request}, this.getFormContentOperationCompleted, userState);
        }
        
        private void OngetFormContentOperationCompleted(object arg) {
            if ((this.getFormContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFormContentCompleted(this, new getFormContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:putFormContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse putFormContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("putFormContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void putFormContentAsync(FMWSRequest request) {
            this.putFormContentAsync(request, null);
        }
        
        /// <remarks/>
        public void putFormContentAsync(FMWSRequest request, object userState) {
            if ((this.putFormContentOperationCompleted == null)) {
                this.putFormContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnputFormContentOperationCompleted);
            }
            this.InvokeAsync("putFormContent", new object[] {
                        request}, this.putFormContentOperationCompleted, userState);
        }
        
        private void OnputFormContentOperationCompleted(object arg) {
            if ((this.putFormContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.putFormContentCompleted(this, new putFormContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteFormContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse deleteFormContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("deleteFormContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteFormContentAsync(FMWSRequest request) {
            this.deleteFormContentAsync(request, null);
        }
        
        /// <remarks/>
        public void deleteFormContentAsync(FMWSRequest request, object userState) {
            if ((this.deleteFormContentOperationCompleted == null)) {
                this.deleteFormContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFormContentOperationCompleted);
            }
            this.InvokeAsync("deleteFormContent", new object[] {
                        request}, this.deleteFormContentOperationCompleted, userState);
        }
        
        private void OndeleteFormContentOperationCompleted(object arg) {
            if ((this.deleteFormContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFormContentCompleted(this, new deleteFormContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getImageList", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getImageList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getImageList", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getImageListAsync(FMWSRequest request) {
            this.getImageListAsync(request, null);
        }
        
        /// <remarks/>
        public void getImageListAsync(FMWSRequest request, object userState) {
            if ((this.getImageListOperationCompleted == null)) {
                this.getImageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImageListOperationCompleted);
            }
            this.InvokeAsync("getImageList", new object[] {
                        request}, this.getImageListOperationCompleted, userState);
        }
        
        private void OngetImageListOperationCompleted(object arg) {
            if ((this.getImageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImageListCompleted(this, new getImageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getImageInfo", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getImageInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getImageInfo", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getImageInfoAsync(FMWSRequest request) {
            this.getImageInfoAsync(request, null);
        }
        
        /// <remarks/>
        public void getImageInfoAsync(FMWSRequest request, object userState) {
            if ((this.getImageInfoOperationCompleted == null)) {
                this.getImageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImageInfoOperationCompleted);
            }
            this.InvokeAsync("getImageInfo", new object[] {
                        request}, this.getImageInfoOperationCompleted, userState);
        }
        
        private void OngetImageInfoOperationCompleted(object arg) {
            if ((this.getImageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImageInfoCompleted(this, new getImageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getImageContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getImageContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getImageContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getImageContentAsync(FMWSRequest request) {
            this.getImageContentAsync(request, null);
        }
        
        /// <remarks/>
        public void getImageContentAsync(FMWSRequest request, object userState) {
            if ((this.getImageContentOperationCompleted == null)) {
                this.getImageContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImageContentOperationCompleted);
            }
            this.InvokeAsync("getImageContent", new object[] {
                        request}, this.getImageContentOperationCompleted, userState);
        }
        
        private void OngetImageContentOperationCompleted(object arg) {
            if ((this.getImageContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImageContentCompleted(this, new getImageContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:putImageContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse putImageContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("putImageContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void putImageContentAsync(FMWSRequest request) {
            this.putImageContentAsync(request, null);
        }
        
        /// <remarks/>
        public void putImageContentAsync(FMWSRequest request, object userState) {
            if ((this.putImageContentOperationCompleted == null)) {
                this.putImageContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnputImageContentOperationCompleted);
            }
            this.InvokeAsync("putImageContent", new object[] {
                        request}, this.putImageContentOperationCompleted, userState);
        }
        
        private void OnputImageContentOperationCompleted(object arg) {
            if ((this.putImageContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.putImageContentCompleted(this, new putImageContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteImageContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse deleteImageContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("deleteImageContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteImageContentAsync(FMWSRequest request) {
            this.deleteImageContentAsync(request, null);
        }
        
        /// <remarks/>
        public void deleteImageContentAsync(FMWSRequest request, object userState) {
            if ((this.deleteImageContentOperationCompleted == null)) {
                this.deleteImageContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteImageContentOperationCompleted);
            }
            this.InvokeAsync("deleteImageContent", new object[] {
                        request}, this.deleteImageContentOperationCompleted, userState);
        }
        
        private void OndeleteImageContentOperationCompleted(object arg) {
            if ((this.deleteImageContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteImageContentCompleted(this, new deleteImageContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDevmodeList", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getDevmodeList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getDevmodeList", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getDevmodeListAsync(FMWSRequest request) {
            this.getDevmodeListAsync(request, null);
        }
        
        /// <remarks/>
        public void getDevmodeListAsync(FMWSRequest request, object userState) {
            if ((this.getDevmodeListOperationCompleted == null)) {
                this.getDevmodeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDevmodeListOperationCompleted);
            }
            this.InvokeAsync("getDevmodeList", new object[] {
                        request}, this.getDevmodeListOperationCompleted, userState);
        }
        
        private void OngetDevmodeListOperationCompleted(object arg) {
            if ((this.getDevmodeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDevmodeListCompleted(this, new getDevmodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDevmodeInfo", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getDevmodeInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getDevmodeInfo", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getDevmodeInfoAsync(FMWSRequest request) {
            this.getDevmodeInfoAsync(request, null);
        }
        
        /// <remarks/>
        public void getDevmodeInfoAsync(FMWSRequest request, object userState) {
            if ((this.getDevmodeInfoOperationCompleted == null)) {
                this.getDevmodeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDevmodeInfoOperationCompleted);
            }
            this.InvokeAsync("getDevmodeInfo", new object[] {
                        request}, this.getDevmodeInfoOperationCompleted, userState);
        }
        
        private void OngetDevmodeInfoOperationCompleted(object arg) {
            if ((this.getDevmodeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDevmodeInfoCompleted(this, new getDevmodeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDevmodeContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getDevmodeContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getDevmodeContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getDevmodeContentAsync(FMWSRequest request) {
            this.getDevmodeContentAsync(request, null);
        }
        
        /// <remarks/>
        public void getDevmodeContentAsync(FMWSRequest request, object userState) {
            if ((this.getDevmodeContentOperationCompleted == null)) {
                this.getDevmodeContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDevmodeContentOperationCompleted);
            }
            this.InvokeAsync("getDevmodeContent", new object[] {
                        request}, this.getDevmodeContentOperationCompleted, userState);
        }
        
        private void OngetDevmodeContentOperationCompleted(object arg) {
            if ((this.getDevmodeContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDevmodeContentCompleted(this, new getDevmodeContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:putDevmodeContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse putDevmodeContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("putDevmodeContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void putDevmodeContentAsync(FMWSRequest request) {
            this.putDevmodeContentAsync(request, null);
        }
        
        /// <remarks/>
        public void putDevmodeContentAsync(FMWSRequest request, object userState) {
            if ((this.putDevmodeContentOperationCompleted == null)) {
                this.putDevmodeContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnputDevmodeContentOperationCompleted);
            }
            this.InvokeAsync("putDevmodeContent", new object[] {
                        request}, this.putDevmodeContentOperationCompleted, userState);
        }
        
        private void OnputDevmodeContentOperationCompleted(object arg) {
            if ((this.putDevmodeContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.putDevmodeContentCompleted(this, new putDevmodeContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteDevmodeContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse deleteDevmodeContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("deleteDevmodeContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDevmodeContentAsync(FMWSRequest request) {
            this.deleteDevmodeContentAsync(request, null);
        }
        
        /// <remarks/>
        public void deleteDevmodeContentAsync(FMWSRequest request, object userState) {
            if ((this.deleteDevmodeContentOperationCompleted == null)) {
                this.deleteDevmodeContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDevmodeContentOperationCompleted);
            }
            this.InvokeAsync("deleteDevmodeContent", new object[] {
                        request}, this.deleteDevmodeContentOperationCompleted, userState);
        }
        
        private void OndeleteDevmodeContentOperationCompleted(object arg) {
            if ((this.deleteDevmodeContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDevmodeContentCompleted(this, new deleteDevmodeContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getGraphdataList", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getGraphdataList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getGraphdataList", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getGraphdataListAsync(FMWSRequest request) {
            this.getGraphdataListAsync(request, null);
        }
        
        /// <remarks/>
        public void getGraphdataListAsync(FMWSRequest request, object userState) {
            if ((this.getGraphdataListOperationCompleted == null)) {
                this.getGraphdataListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGraphdataListOperationCompleted);
            }
            this.InvokeAsync("getGraphdataList", new object[] {
                        request}, this.getGraphdataListOperationCompleted, userState);
        }
        
        private void OngetGraphdataListOperationCompleted(object arg) {
            if ((this.getGraphdataListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGraphdataListCompleted(this, new getGraphdataListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getGraphdataInfo", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getGraphdataInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getGraphdataInfo", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getGraphdataInfoAsync(FMWSRequest request) {
            this.getGraphdataInfoAsync(request, null);
        }
        
        /// <remarks/>
        public void getGraphdataInfoAsync(FMWSRequest request, object userState) {
            if ((this.getGraphdataInfoOperationCompleted == null)) {
                this.getGraphdataInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGraphdataInfoOperationCompleted);
            }
            this.InvokeAsync("getGraphdataInfo", new object[] {
                        request}, this.getGraphdataInfoOperationCompleted, userState);
        }
        
        private void OngetGraphdataInfoOperationCompleted(object arg) {
            if ((this.getGraphdataInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGraphdataInfoCompleted(this, new getGraphdataInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getGraphdataContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getGraphdataContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getGraphdataContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getGraphdataContentAsync(FMWSRequest request) {
            this.getGraphdataContentAsync(request, null);
        }
        
        /// <remarks/>
        public void getGraphdataContentAsync(FMWSRequest request, object userState) {
            if ((this.getGraphdataContentOperationCompleted == null)) {
                this.getGraphdataContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGraphdataContentOperationCompleted);
            }
            this.InvokeAsync("getGraphdataContent", new object[] {
                        request}, this.getGraphdataContentOperationCompleted, userState);
        }
        
        private void OngetGraphdataContentOperationCompleted(object arg) {
            if ((this.getGraphdataContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGraphdataContentCompleted(this, new getGraphdataContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:putGraphdataContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse putGraphdataContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("putGraphdataContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void putGraphdataContentAsync(FMWSRequest request) {
            this.putGraphdataContentAsync(request, null);
        }
        
        /// <remarks/>
        public void putGraphdataContentAsync(FMWSRequest request, object userState) {
            if ((this.putGraphdataContentOperationCompleted == null)) {
                this.putGraphdataContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnputGraphdataContentOperationCompleted);
            }
            this.InvokeAsync("putGraphdataContent", new object[] {
                        request}, this.putGraphdataContentOperationCompleted, userState);
        }
        
        private void OnputGraphdataContentOperationCompleted(object arg) {
            if ((this.putGraphdataContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.putGraphdataContentCompleted(this, new putGraphdataContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteGraphdataContent", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse deleteGraphdataContent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("deleteGraphdataContent", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteGraphdataContentAsync(FMWSRequest request) {
            this.deleteGraphdataContentAsync(request, null);
        }
        
        /// <remarks/>
        public void deleteGraphdataContentAsync(FMWSRequest request, object userState) {
            if ((this.deleteGraphdataContentOperationCompleted == null)) {
                this.deleteGraphdataContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGraphdataContentOperationCompleted);
            }
            this.InvokeAsync("deleteGraphdataContent", new object[] {
                        request}, this.deleteGraphdataContentOperationCompleted, userState);
        }
        
        private void OndeleteGraphdataContentOperationCompleted(object arg) {
            if ((this.deleteGraphdataContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteGraphdataContentCompleted(this, new deleteGraphdataContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFielddataList", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getFielddataList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getFielddataList", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getFielddataListAsync(FMWSRequest request) {
            this.getFielddataListAsync(request, null);
        }
        
        /// <remarks/>
        public void getFielddataListAsync(FMWSRequest request, object userState) {
            if ((this.getFielddataListOperationCompleted == null)) {
                this.getFielddataListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFielddataListOperationCompleted);
            }
            this.InvokeAsync("getFielddataList", new object[] {
                        request}, this.getFielddataListOperationCompleted, userState);
        }
        
        private void OngetFielddataListOperationCompleted(object arg) {
            if ((this.getFielddataListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFielddataListCompleted(this, new getFielddataListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFielddataInfo", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getFielddataInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getFielddataInfo", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getFielddataInfoAsync(FMWSRequest request) {
            this.getFielddataInfoAsync(request, null);
        }
        
        /// <remarks/>
        public void getFielddataInfoAsync(FMWSRequest request, object userState) {
            if ((this.getFielddataInfoOperationCompleted == null)) {
                this.getFielddataInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFielddataInfoOperationCompleted);
            }
            this.InvokeAsync("getFielddataInfo", new object[] {
                        request}, this.getFielddataInfoOperationCompleted, userState);
        }
        
        private void OngetFielddataInfoOperationCompleted(object arg) {
            if ((this.getFielddataInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFielddataInfoCompleted(this, new getFielddataInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:assortOverlay", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse assortOverlay([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("assortOverlay", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void assortOverlayAsync(FMWSRequest request) {
            this.assortOverlayAsync(request, null);
        }
        
        /// <remarks/>
        public void assortOverlayAsync(FMWSRequest request, object userState) {
            if ((this.assortOverlayOperationCompleted == null)) {
                this.assortOverlayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassortOverlayOperationCompleted);
            }
            this.InvokeAsync("assortOverlay", new object[] {
                        request}, this.assortOverlayOperationCompleted, userState);
        }
        
        private void OnassortOverlayOperationCompleted(object arg) {
            if ((this.assortOverlayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assortOverlayCompleted(this, new assortOverlayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAssortConfigurationList", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getAssortConfigurationList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getAssortConfigurationList", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getAssortConfigurationListAsync(FMWSRequest request) {
            this.getAssortConfigurationListAsync(request, null);
        }
        
        /// <remarks/>
        public void getAssortConfigurationListAsync(FMWSRequest request, object userState) {
            if ((this.getAssortConfigurationListOperationCompleted == null)) {
                this.getAssortConfigurationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssortConfigurationListOperationCompleted);
            }
            this.InvokeAsync("getAssortConfigurationList", new object[] {
                        request}, this.getAssortConfigurationListOperationCompleted, userState);
        }
        
        private void OngetAssortConfigurationListOperationCompleted(object arg) {
            if ((this.getAssortConfigurationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssortConfigurationListCompleted(this, new getAssortConfigurationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAssortConfiguration", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse getAssortConfiguration([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("getAssortConfiguration", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getAssortConfigurationAsync(FMWSRequest request) {
            this.getAssortConfigurationAsync(request, null);
        }
        
        /// <remarks/>
        public void getAssortConfigurationAsync(FMWSRequest request, object userState) {
            if ((this.getAssortConfigurationOperationCompleted == null)) {
                this.getAssortConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssortConfigurationOperationCompleted);
            }
            this.InvokeAsync("getAssortConfiguration", new object[] {
                        request}, this.getAssortConfigurationOperationCompleted, userState);
        }
        
        private void OngetAssortConfigurationOperationCompleted(object arg) {
            if ((this.getAssortConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssortConfigurationCompleted(this, new getAssortConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:archiveCsmx", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse archiveCsmx([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("archiveCsmx", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void archiveCsmxAsync(FMWSRequest request) {
            this.archiveCsmxAsync(request, null);
        }
        
        /// <remarks/>
        public void archiveCsmxAsync(FMWSRequest request, object userState) {
            if ((this.archiveCsmxOperationCompleted == null)) {
                this.archiveCsmxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnarchiveCsmxOperationCompleted);
            }
            this.InvokeAsync("archiveCsmx", new object[] {
                        request}, this.archiveCsmxOperationCompleted, userState);
        }
        
        private void OnarchiveCsmxOperationCompleted(object arg) {
            if ((this.archiveCsmxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.archiveCsmxCompleted(this, new archiveCsmxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:get", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse get([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("get", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getAsync(FMWSRequest request) {
            this.getAsync(request, null);
        }
        
        /// <remarks/>
        public void getAsync(FMWSRequest request, object userState) {
            if ((this.getOperationCompleted == null)) {
                this.getOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOperationCompleted);
            }
            this.InvokeAsync("get", new object[] {
                        request}, this.getOperationCompleted, userState);
        }
        
        private void OngetOperationCompleted(object arg) {
            if ((this.getCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompleted(this, new getCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:put", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse put([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("put", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void putAsync(FMWSRequest request) {
            this.putAsync(request, null);
        }
        
        /// <remarks/>
        public void putAsync(FMWSRequest request, object userState) {
            if ((this.putOperationCompleted == null)) {
                this.putOperationCompleted = new System.Threading.SendOrPostCallback(this.OnputOperationCompleted);
            }
            this.InvokeAsync("put", new object[] {
                        request}, this.putOperationCompleted, userState);
        }
        
        private void OnputOperationCompleted(object arg) {
            if ((this.putCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.putCompleted(this, new putCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:post", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse post([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("post", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void postAsync(FMWSRequest request) {
            this.postAsync(request, null);
        }
        
        /// <remarks/>
        public void postAsync(FMWSRequest request, object userState) {
            if ((this.postOperationCompleted == null)) {
                this.postOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostOperationCompleted);
            }
            this.InvokeAsync("post", new object[] {
                        request}, this.postOperationCompleted, userState);
        }
        
        private void OnpostOperationCompleted(object arg) {
            if ((this.postCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postCompleted(this, new postCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:delete", RequestNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", ResponseNamespace="http://www.canon.com/ns/active/iwfm/SoapWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public FMWSResponse delete([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FMWSRequest request) {
            object[] results = this.Invoke("delete", new object[] {
                        request});
            return ((FMWSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsync(FMWSRequest request) {
            this.deleteAsync(request, null);
        }
        
        /// <remarks/>
        public void deleteAsync(FMWSRequest request, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        request}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.canon.com/ns/active/iwfm/SoapWebService")]
    public partial class FMWSRequest : FMWSMessage {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FMWSResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FMWSRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.canon.com/ns/active/iwfm/SoapWebService")]
    public partial class FMWSMessage {
        
        private FMWSKeyValue[] headersField;
        
        private FMWSKeyValue[] parametersField;
        
        private FMWSData[] attachmentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("headers", IsNullable=true)]
        public FMWSKeyValue[] headers {
            get {
                return this.headersField;
            }
            set {
                this.headersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameters", IsNullable=true)]
        public FMWSKeyValue[] parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attachments", IsNullable=true)]
        public FMWSData[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.canon.com/ns/active/iwfm/SoapWebService")]
    public partial class FMWSKeyValue {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.canon.com/ns/active/iwfm/SoapWebService")]
    public partial class FMWSData {
        
        private string contentNameField;
        
        private string contentTypeField;
        
        private byte[] contentField;
        
        /// <remarks/>
        public string contentName {
            get {
                return this.contentNameField;
            }
            set {
                this.contentNameField = value;
            }
        }
        
        /// <remarks/>
        public string contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.canon.com/ns/active/iwfm/SoapWebService")]
    public partial class FMWSResponse : FMWSMessage {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void overlayCompletedEventHandler(object sender, overlayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class overlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal overlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getFormListCompletedEventHandler(object sender, getFormListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFormListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFormListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getFormInfoCompletedEventHandler(object sender, getFormInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFormInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFormInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getFormContentCompletedEventHandler(object sender, getFormContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFormContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFormContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void putFormContentCompletedEventHandler(object sender, putFormContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class putFormContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal putFormContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteFormContentCompletedEventHandler(object sender, deleteFormContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFormContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteFormContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getImageListCompletedEventHandler(object sender, getImageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getImageInfoCompletedEventHandler(object sender, getImageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getImageContentCompletedEventHandler(object sender, getImageContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImageContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImageContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void putImageContentCompletedEventHandler(object sender, putImageContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class putImageContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal putImageContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteImageContentCompletedEventHandler(object sender, deleteImageContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteImageContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteImageContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getDevmodeListCompletedEventHandler(object sender, getDevmodeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDevmodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDevmodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getDevmodeInfoCompletedEventHandler(object sender, getDevmodeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDevmodeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDevmodeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getDevmodeContentCompletedEventHandler(object sender, getDevmodeContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDevmodeContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDevmodeContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void putDevmodeContentCompletedEventHandler(object sender, putDevmodeContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class putDevmodeContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal putDevmodeContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteDevmodeContentCompletedEventHandler(object sender, deleteDevmodeContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDevmodeContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDevmodeContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getGraphdataListCompletedEventHandler(object sender, getGraphdataListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGraphdataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGraphdataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getGraphdataInfoCompletedEventHandler(object sender, getGraphdataInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGraphdataInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGraphdataInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getGraphdataContentCompletedEventHandler(object sender, getGraphdataContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGraphdataContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGraphdataContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void putGraphdataContentCompletedEventHandler(object sender, putGraphdataContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class putGraphdataContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal putGraphdataContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteGraphdataContentCompletedEventHandler(object sender, deleteGraphdataContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteGraphdataContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteGraphdataContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getFielddataListCompletedEventHandler(object sender, getFielddataListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFielddataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFielddataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getFielddataInfoCompletedEventHandler(object sender, getFielddataInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFielddataInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFielddataInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void assortOverlayCompletedEventHandler(object sender, assortOverlayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assortOverlayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assortOverlayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAssortConfigurationListCompletedEventHandler(object sender, getAssortConfigurationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssortConfigurationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAssortConfigurationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAssortConfigurationCompletedEventHandler(object sender, getAssortConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssortConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAssortConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void archiveCsmxCompletedEventHandler(object sender, archiveCsmxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class archiveCsmxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal archiveCsmxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getCompletedEventHandler(object sender, getCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void putCompletedEventHandler(object sender, putCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class putCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal putCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void postCompletedEventHandler(object sender, postCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteCompletedEventHandler(object sender, deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FMWSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FMWSResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591